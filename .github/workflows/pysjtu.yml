name: PySJTU Tests

on: [push, pull_request]

jobs:
  test:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: [3.6, 3.7]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test if no syntax error
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov pytest-mock respx flask
        pytest --cov-report xml --cov=pysjtu

    - name: Setup Java JDK
      if: matrix.os == 'ubuntu-latest' && matrix.python == '3.7' && github.repository == 'PhotonQuantum/pysjtu'
      uses: actions/setup-java@v1.3.0
      with:
        # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
        java-version: 1.8
        # The package type (jre, jdk, jdk+fx)
        java-package: jre

    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python == '3.7' && github.repository == 'PhotonQuantum/pysjtu'
      run: |
        curl -LS -o codacy-coverage-reporter-assembly.jar "$(curl -LSs https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | endswith(".jar"))) | .[0].browser_download_url')"
        java -jar codacy-coverage-reporter-assembly.jar report -l Python -r coverage.xml
